## Auto boxing, unboxing 이란?

Autoboxing은 Java 컴파일러가 primitive 타입을 객체 wrapper class로 변환하는 것을 말합니다.

변환이 다른 방향으로 진행되는 경우 unboxing 이라고 합니다.

```java
int a = 1;

List<Integer> list = new ArrayList<>();

for (int i = 0; i < 10; i++){
    list.add(i);
}
```

위 코드는 변수 a를 primitive 타입으로 선언하고 Collection인 List에 추가하는 코드입니다.

java 파일을 컴파일 한 후 디컴파일 하여 파일을 열어봅니다.

```java
ArrayList<Integer> arrayList = new ArrayList();
for (byte b = 0; b < 10; b++)
  arrayList.add(Integer.valueOf(b));
```

add 함수를 호출하면서 파라미터가 Integer.valueOf(b)로 변경된 것을 볼 수 있습니다. 이 과정을 autoboxing 이라고 합니다.

연산자는 Integer 객체에 적용되지 않습니다. 하지만 아래 코드를 보면 오류를 발생시키지 않고, 컴파일이 되는 것을 확인할 수 있습니다. 어떻게 연산을 할 수 있는 걸까요?

```java
int sum = 0;
for (Integer i : list){
	if (i.intValue() % 2 == 0){
    sum += i.intValue();
	}
}
```

그 이유는 컴파일러가 unboxing 하기 때문입니다. intValue() 함수를 통해 

wrapper class를 primitive type으로 변경하는 것을 볼 수 있습니다.

```java
for (Integer integer : arrayList) {
  if (integer.intValue() % 2 == 0)
    i += integer.intValue(); 
}
```
